'use client';

import Link from 'next/link';

interface FrameworkOption {
	id: 'vite' | 'nextjs' | 'reactrouter' | 'tanstack';
	name: string;
	description: string;
	logo: React.ReactNode;
}

interface FrameworkSelectorProps {
	onSelect?: (
		framework: 'vite' | 'nextjs' | 'reactrouter' | 'tanstack',
	) => void;
	defaultSelected?: 'vite' | 'nextjs' | 'reactrouter' | 'tanstack';
	className?: string;
}

const ViteLogo = () => (
	<svg
		role="img"
		viewBox="0 0 24 24"
		xmlns="http://www.w3.org/2000/svg"
		className="h-16 w-16"
		fill="currentColor"
	>
		<title>Vite</title>
		<path d="m8.286 10.578.512-8.657a.306.306 0 0 1 .247-.282L17.377.006a.306.306 0 0 1 .353.385l-1.558 5.403a.306.306 0 0 0 .352.385l2.388-.46a.306.306 0 0 1 .332.438l-6.79 13.55-.123.19a.294.294 0 0 1-.252.14c-.177 0-.35-.152-.305-.369l1.095-5.301a.306.306 0 0 0-.388-.355l-1.433.435a.306.306 0 0 1-.389-.354l.69-3.375a.306.306 0 0 0-.37-.36l-2.32.536a.306.306 0 0 1-.374-.316zm14.976-7.926L17.284 3.74l-.544 1.887 2.077-.4a.8.8 0 0 1 .84.369.8.8 0 0 1 .034.783L12.9 19.93l-.013.025-.015.023-.122.19a.801.801 0 0 1-.672.37.826.826 0 0 1-.634-.302.8.8 0 0 1-.16-.67l1.029-4.981-1.12.34a.81.81 0 0 1-.86-.262.802.802 0 0 1-.165-.67l.63-3.08-2.027.468a.808.808 0 0 1-.768-.233.81.81 0 0 1-.217-.6l.389-6.57-7.44-1.33a.612.612 0 0 0-.64.906L11.58 23.691a.612.612 0 0 0 1.066-.004l11.26-20.135a.612.612 0 0 0-.644-.9z"></path>
	</svg>
);

const NextJsLogo = () => (
	<svg
		role="img"
		viewBox="0 0 24 24"
		xmlns="http://www.w3.org/2000/svg"
		className="h-16 w-16"
		fill="currentColor"
	>
		<title>Next.js</title>
		<path d="M11.5725 0c-.1763 0-.3098.0013-.3584.0067-.0516.0053-.2159.021-.3636.0328-3.4088.3073-6.6017 2.1463-8.624 4.9728C1.1004 6.584.3802 8.3666.1082 10.255c-.0962.659-.108.8537-.108 1.7474s.012 1.0884.108 1.7476c.652 4.506 3.8591 8.2919 8.2087 9.6945.7789.2511 1.6.4223 2.5337.5255.3636.04 1.9354.04 2.299 0 1.6117-.1783 2.9772-.577 4.3237-1.2643.2065-.1056.2464-.1337.2183-.1573-.0188-.0139-.8987-1.1938-1.9543-2.62l-1.919-2.592-2.4047-3.5583c-1.3231-1.9564-2.4117-3.556-2.4211-3.556-.0094-.0026-.0187 1.5787-.0235 3.509-.0067 3.3802-.0093 3.5162-.0516 3.596-.061.115-.108.1618-.2064.2134-.075.0374-.1408.0445-.495.0445h-.406l-.1078-.068a.4383.4383 0 01-.1572-.1712l-.0493-.1056.0053-4.703.0067-4.7054.0726-.0915c.0376-.0493.1174-.1125.1736-.143.0962-.047.1338-.0517.5396-.0517.4787 0 .5584.0187.6827.1547.0353.0377 1.3373 1.9987 2.895 4.3608a10760.433 10760.433 0 004.7344 7.1706l1.9002 2.8782.096-.0633c.8518-.5536 1.7525-1.3418 2.4657-2.1627 1.5179-1.7429 2.4963-3.868 2.8247-6.134.0961-.6591.1078-.854.1078-1.7475 0-.8937-.012-1.0884-.1078-1.7476-.6522-4.506-3.8592-8.2919-8.2087-9.6945-.7672-.2487-1.5836-.42-2.4985-.5232-.169-.0176-1.0835-.0366-1.6123-.037zm4.0685 7.217c.3473 0 .4082.0053.4857.047.1127.0562.204.1642.237.2767.0186.061.0234 1.3653.0186 4.3044l-.0067 4.2175-.7436-1.14-.7461-1.14v-3.066c0-1.982.0093-3.0963.0234-3.1502.0375-.1313.1196-.2346.2323-.2955.0961-.0494.1313-.054.4997-.054z"></path>
	</svg>
);

const ReactRouterLogo = () => (
	<svg
		xmlns="http://www.w3.org/2000/svg"
		viewBox="0 0 24 24"
		className="h-16 w-16"
		fill="currentColor"
	>
		<title>React Router</title>
		<path d="M12.118 5.466a2.306 2.306 0 0 0-.623.08c-.278.067-.702.332-.953.583-.41.423-.49.609-.662 1.469-.08.423.41 1.43.847 1.734.45.317 1.085.502 2.065.608 1.429.16 1.84.636 1.84 2.197 0 1.377-.385 1.747-1.96 1.906-1.707.172-2.58.834-2.765 2.117-.106.781.41 1.76 1.125 2.091 1.627.768 3.15-.198 3.467-2.196.211-1.284.622-1.642 1.998-1.747 1.588-.133 2.409-.675 2.713-1.787.278-1.02-.304-2.157-1.297-2.554-.264-.106-.873-.238-1.35-.291-1.495-.16-1.879-.424-2.038-1.39-.225-1.337-.317-1.562-.794-2.09a2.174 2.174 0 0 0-1.613-.73zm-4.785 4.36a2.145 2.145 0 0 0-.497.048c-1.469.318-2.17 2.051-1.35 3.295 1.178 1.774 3.944.953 3.97-1.177.012-1.193-.98-2.143-2.123-2.166zM2.089 14.19a2.22 2.22 0 0 0-.427.052c-2.158.476-2.237 3.626-.106 4.182.53.145.582.145 1.111.013 1.191-.318 1.866-1.456 1.549-2.607-.278-1.02-1.144-1.664-2.127-1.64zm19.824.008c-.233.002-.477.058-.784.162-1.39.477-1.866 2.092-.98 3.336.557.794 1.96 1.058 2.82.516 1.416-.874 1.363-3.057-.093-3.746-.38-.186-.663-.271-.963-.268z"></path>
	</svg>
);

const TanStackLogo = () => (
	<svg
		width="663"
		height="660"
		viewBox="0 0 663 660"
		fill="currentColor"
		xmlns="http://www.w3.org/2000/svg"
		className="h-16 w-16"
	>
		<path
			d="M306.092 0.624438C314.81 -0.520184 324.019 0.258986 332.805 0.258986C365.354 0.258986 397.311 5.31239 428.453 14.89C468.198 27.1136 505.216 46.6567 537.889 72.3675C577.936 103.881 611.118 145.215 632.41 191.604C672.246 278.394 671.954 383.577 631.142 470.002C604.753 525.882 562.418 572.652 511.177 606.759C469.368 634.588 420.47 651.622 370.72 657.653C307.394 665.33 238.935 654.111 182.007 624.923C75.1385 570.128 2.48424 459.847 1.04692 338.991C0.770314 315.69 1.13309 292.25 5.74577 269.176C13.2589 231.597 26.3585 195.272 46.032 162.299C67.3134 126.628 94.8024 95.1514 127.72 69.7732C166.323 40.0122 211.188 18.6057 258.699 7.7154C270.172 5.08574 281.693 3.62841 293.271 2.21897L296.93 1.77416C299.98 1.40263 303.034 1.02622 306.092 0.624438ZM195.536 550.066C180.819 551.644 165.297 554.322 152.666 562.588C155.51 563.272 158.769 562.593 161.735 562.588C168.86 562.576 176.053 562.308 183.17 562.62C200.987 563.402 219.552 566.252 236.757 570.97C258.787 577.011 278.19 588.899 299.413 596.915C321.803 605.372 344.09 608 367.84 608C379.808 608 391.686 607.965 403.29 604.697C397.234 601.472 388.565 602.077 381.856 600.734C367.299 597.819 352.987 594.259 338.986 589.264C328.681 585.587 318.755 581.05 308.875 576.415L302.526 573.43C293.356 569.121 284.163 564.869 274.681 561.287C249.749 551.869 222.121 547.216 195.536 550.066ZM217.796 487.452C188.632 487.452 159.136 492.589 132.88 505.821C126.519 509.027 120.473 512.847 114.743 517.08C112.997 518.371 109.901 520.029 109.256 522.272C108.601 524.547 110.942 526.454 112.27 527.91C118.832 524.412 125.067 520.71 132.056 518.054C177.255 500.884 232.048 504.484 277.154 520.227C299.648 528.078 320.373 539.819 342.283 549.027C366.787 559.325 391.814 566.002 418.13 569.426C449.172 573.464 484.564 570.192 512.939 556.184C522.909 551.262 536.753 543.762 540.969 532.864C535.762 533.319 531.077 535.55 526.129 537.088C518.263 539.533 510.302 541.608 502.221 543.227C474.833 548.713 445.709 549.846 418.13 544.866C392.138 540.173 367.988 530.747 343.951 520.831L340.883 519.563C338.837 518.717 336.793 517.867 334.747 517.019L331.678 515.746C319.398 510.661 307.071 505.636 294.467 501.236C269.982 492.69 243.74 487.452 217.796 487.452ZM268.91 39.4606C233.95 47.1832 202.633 62.2212 172.452 81.1786C154.931 92.1841 138.171 103.459 122.987 117.623C100.408 138.688 83.1511 164.292 68.1004 191.035C52.5931 218.588 42.6505 250.7 37.845 281.859C33.1309 312.427 32.3543 344.566 37.7543 375.16C44.5047 413.408 57.3533 449.3 77.6439 482.498C84.4627 479.313 89.3037 472.052 94.9568 467.161C106.372 457.285 118.356 448.131 131.231 440.232C135.997 437.308 140.894 435.038 146.071 432.957C148.024 432.172 151.217 431.454 152.136 429.309C153.597 425.903 150.895 419.973 150.431 416.444C149.106 406.348 148.307 396.081 148.557 385.894C149.282 356.225 154.826 326.142 165.382 298.372C173.337 277.448 185.489 258.45 199.885 241.401C204.77 235.615 209.963 230.23 215.322 224.888C218.49 221.731 222.421 219.029 224.391 214.979C214.054 214.986 203.716 217.966 193.887 220.993C172.713 227.512 152.086 237.186 134.529 250.834C126.521 257.06 120.656 265.221 113.082 271.774C110.758 273.784 106.597 276.479 103.387 274.962C98.5364 272.671 99.285 263.127 98.7293 258.74C96.5924 241.866 102.984 220.524 111.107 205.897C124.147 182.417 148.258 162.368 176.575 163.068C188.803 163.37 199.509 167.619 211.2 170.393C208.236 166.181 204.261 163.111 200.483 159.659C191.225 151.2 181.1 143.474 169.979 137.63C165.505 135.279 160.688 133.851 155.964 132.124C153.589 131.256 150.598 130.061 149.704 127.421C148.05 122.533 156.853 118.005 160.086 115.943C172.586 107.973 187.913 101.418 202.956 101.049C226.465 100.471 249.435 113.516 259.119 135.714C262.523 143.518 263.53 151.769 264.198 160.097L264.32 161.66L264.494 164.005C264.513 164.266 264.532 164.527 264.552 164.787L264.668 166.352L264.788 167.916C272.171 161.897 277.364 153.039 284.574 146.592C301.435 131.513 324.51 124.82 346.405 131.608C366.192 137.741 383.39 151.396 393.511 169.567C396.159 174.321 403.547 185.941 398.21 190.676C394.032 194.384 388.735 191.494 384.329 189.957C380.993 188.793 377.546 188.055 374.087 187.371L372.2 187.002C371.571 186.879 370.942 186.756 370.314 186.63C358.333 184.228 344.397 184.477 332.39 186.588C324.627 187.953 317.041 190.716 309.306 191.86V193.512C330.456 193.687 350.915 205.752 361.35 224.062C365.673 231.647 367.832 240.329 369.488 248.832C371.536 259.341 370.097 270.791 367.225 281.033C366.262 284.467 364.515 290.289 360.408 291.08C357.505 291.639 355.04 288.749 353.383 286.8C349.039 281.693 344.907 276.837 339.81 272.426C326.914 261.269 313.279 250.977 299.413 241.053C292.051 235.784 283.988 228.933 275.505 225.713C277.89 231.458 280.227 236.799 281.038 243.052C283.424 261.445 275.724 278.757 264.166 292.592C260.639 296.815 256.867 301.068 252.421 304.348C250.578 305.709 248.265 307.486 245.826 307.101C238.18 305.893 237.27 294.369 236.098 288.464C232.127 268.465 233.722 248.603 239.231 229.016C234.329 231.501 230.787 236.94 227.709 241.401C220.938 251.217 215.063 261.6 210.851 272.776C194.073 317.296 194.234 369.44 215.97 412.3C218.397 417.086 222.08 416.444 226.864 416.444C227.585 416.444 228.307 416.439 229.029 416.433L231.197 416.41C235.536 416.365 239.884 416.346 244.177 416.919C246.405 417.216 249.498 416.951 251.261 418.593C253.373 420.56 252.247 423.932 251.761 426.352C250.402 433.117 249.948 439.266 249.948 446.168C258.972 444.769 261.473 430.302 264.672 423.049C268.297 414.833 271.986 406.608 275.339 398.279C276.988 394.185 279.194 389.608 278.615 385.068C277.965 379.966 274.279 374.557 271.71 370.206C266.848 361.971 261.321 353.498 257.741 344.61C254.88 337.505 257.544 328.627 265.613 326.088C270.063 324.688 274.811 327.434 277.707 330.651C283.78 337.394 287.7 347.429 292.109 355.344L326.504 417.269C329.425 422.513 332.352 427.751 335.341 432.957C336.507 434.988 337.693 438.124 340.081 438.99C342.208 439.761 345.114 438.665 347.23 438.241C352.722 437.142 358.206 435.954 363.718 434.959C370.324 433.765 380.392 433.989 385.153 428.829C378.19 426.623 370.141 426.754 362.894 427.251C358.541 427.55 353.716 429.107 349.715 426.565C343.762 422.781 339.805 414.043 336.163 408.187C327.182 393.747 318.721 379.091 310.122 364.426L308.746 362.091L305.98 357.426C304.599 355.091 303.229 352.751 301.9 350.39C300.873 348.563 299.35 346.156 300.821 344.143C302.367 342.028 305.736 341.903 308.778 341.9L309.381 341.9C310.577 341.901 311.697 341.902 312.604 341.783C324.878 340.168 337.323 338.83 349.703 338.83C348.739 335.478 345.983 331.689 346.865 328.1C348.837 320.069 360.391 317.557 365.764 323.319C369.372 327.187 371.469 332.511 373.816 337.179C376.913 343.341 380.44 349.297 383.757 355.344C389.562 365.93 395.903 376.225 401.873 386.719C402.366 387.585 402.873 388.446 403.386 389.306L404.157 390.597C406.734 394.9 409.322 399.232 410.71 404.059C389.974 403.11 374.409 379.04 365.367 362.775C364.646 365.379 365.818 367.703 366.755 370.206C368.704 375.403 371.032 380.353 373.962 385.068C378.146 391.801 382.944 398.734 389.275 403.622C400.511 412.295 415.328 412.343 428.848 411.416C437.517 410.821 448.35 406.874 456.878 409.552C465.392 412.225 468.819 421.615 463.763 428.828C459.975 434.231 454.92 436.271 448.634 437.085C453.079 446.621 458.903 455.471 463.124 465.158C464.882 469.194 466.715 475.379 470.929 477.509C473.734 478.926 477.753 477.606 480.786 477.543C477.742 469.49 472.043 462.656 469.244 454.425C477.778 454.815 486.031 459.268 493.977 462.11C509.607 467.7 525.041 473.812 540.452 479.979L547.564 482.828C553.903 485.367 560.28 487.88 566.526 490.64C568.811 491.65 571.975 494.011 574.501 492.558C576.563 491.371 577.896 488.542 579.167 486.626C582.723 481.264 585.943 475.697 589.132 470.112C601.907 447.747 611.276 423.24 617.535 398.279C638.181 315.956 620.47 225.123 570.858 156.356C551.797 129.936 527.825 107.094 501.397 88.1779C435.257 40.8412 348.485 21.8837 268.91 39.4606ZM404.115 449.99C386.582 454.561 368.513 458.704 350.528 461.03C352.893 469.083 358.673 476.916 362.904 484.149C364.539 486.945 366.29 490.691 369.522 491.904C373.174 493.275 377.586 491.051 381.031 489.929C379.436 485.564 376.752 481.636 374.554 477.543C373.649 475.856 372.249 473.858 372.995 471.854C374.405 468.067 380.261 468.29 383.504 467.632C392.051 465.898 400.509 463.734 409.061 462.021C412.212 461.389 416.6 459.678 419.767 460.735C422.138 461.526 423.567 463.48 424.919 465.517L425.525 466.436C426.334 467.659 427.162 468.853 428.196 469.787C431.654 472.909 436.825 473.389 441.214 474.241C438.535 468.213 434.083 462.94 431.229 456.902C429.57 453.39 428.206 448.224 424.573 446.194C419.568 443.399 409.231 448.656 404.115 449.99ZM293.642 409.838C292.817 420.306 289.606 428.823 284.574 437.911C290.341 438.641 296.223 438.901 301.887 440.305C306.132 441.357 310.043 443.363 314.253 444.517C312.002 438.359 307.827 432.865 304.592 427.177C301.325 421.436 298.402 414.46 293.642 409.838Z"
			fill="currentColor"
		/>
	</svg>
);

const frameworks: FrameworkOption[] = [
	{
		id: 'vite',
		name: 'Vite',
		description:
			'React with Vite for a fast and lightweight development workflow',
		logo: <ViteLogo />,
	},
	{
		id: 'nextjs',
		name: 'Next.js',
		description:
			'React framework with server-side rendering, static generation, and API routes',
		logo: <NextJsLogo />,
	},
	{
		id: 'reactrouter',
		name: 'React Router',
		description:
			'React Router 7 in framework mode with type-safe routes, SPA, SSR, and static rendering',
		logo: <ReactRouterLogo />,
	},
	{
		id: 'tanstack',
		name: 'TanStack Start',
		description:
			'Full-stack React framework by TanStack with SSR, routing, and data-fetching built-in',
		logo: <TanStackLogo />,
	},
];

const FrameworkSelector = () => {
	return (
		<div>
			<div className="grid grid-cols-1 gap-3 md:grid-cols-2">
				{frameworks.map((framework) => (
					<Link
						href={`/docs/${framework.id}`}
						key={framework.id}
						className="group no-underline"
					>
						<button
							type="button"
							key={framework.id}
							className="relative h-full w-full cursor-pointer"
						>
							<div className="group flex h-full w-full flex-col items-center justify-center gap-4 rounded-md border border-fd-border bg-card p-8 shadow-sm transition-colors duration-150 hover:bg-card-muted text-foreground/70 hover:text-foreground">
								{framework.logo}
								<div className="mt-3 text-center">
									<span className="block text-lg font-medium text-foreground/70 group-hover:text-foreground transition-colors duration-150">
										{framework.name}
									</span>
									<span className="block text-sm text-foreground/45 group-hover:text-foreground/70 transition-colors duration-150">
										{framework.description}
									</span>
								</div>
							</div>
						</button>
					</Link>
				))}
			</div>
		</div>
	);
};

export { FrameworkSelector };
export type { FrameworkSelectorProps };
